{"ast":null,"code":"import _objectSpread from \"/home/anthony/Devweb/WILD/hackathon synaps/Synapsis/front/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/anthony/Devweb/WILD/hackathon synaps/Synapsis/front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/anthony/Devweb/WILD/hackathon synaps/Synapsis/front/src/components/4_profilePage/ProfilePage.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport NavBar from '../6_navBar/NavBar';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './ProfilePage.css';\n\nconst ProfilePage = () => {\n  //hooks pour get et update un user\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        idUser = _useState2[0],\n        setIdUser = _useState2[1];\n\n  const _useState3 = useState({\n    firstname: '',\n    lastname: '',\n    email: '',\n    password: '',\n    birthday: '',\n    birthday_place: '',\n    actual_club: '',\n    categorie: '',\n    size: '',\n    weight: '',\n    hobbies: '',\n    profil_pic: '',\n    role: ''\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        updateUser = _useState4[0],\n        setUpdateUser = _useState4[1]; //hooks pour get create et delete\n\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        history = _useState6[0],\n        sethistory = _useState6[1];\n\n  const _useState7 = useState({\n    name: '',\n    poste: '',\n    date: '',\n    description: ''\n  }),\n        _useState8 = _slicedToArray(_useState7, 2),\n        createHistory = _useState8[0],\n        setcreateHistory = _useState8[1]; //hooks pour get et update un palmares\n\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        palmares = _useState10[0],\n        setpalmares = _useState10[1];\n\n  const _useState11 = useState({\n    name: '',\n    description: '',\n    UserId: 0\n  }),\n        _useState12 = _slicedToArray(_useState11, 2),\n        createPalmares = _useState12[0],\n        setcreatePalmares = _useState12[1];\n\n  useEffect(() => {\n    fetchDataUser();\n  }, []); //fetch de la data du user \n\n  const fetchDataUser = () => {\n    axios.get(`http://localhost:5000/users/2`).then(res => setIdUser(res.data)).catch(err => console.log(err));\n  }; // update de la data du user\n\n\n  const updateDataUser = e => {\n    e.preventDefault();\n    axios.put(`http://localhost:5000/users/2`, updateUser).then(res => setUpdateUser(res.data)).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    fetchDataHistory();\n  }, []); //fetch de la data des history\n\n  const fetchDataHistory = () => {\n    axios.get(`http://localhost:5000/history`).then(res => sethistory(res.data)).catch(err => console.log(err));\n  }; //post de history\n\n\n  const createDataHistory = e => {\n    e.preventDefault();\n    axios.post('http://localhost:5000/palmares', createPalmares).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    fetchDataPalmares();\n  }, []); //fetch de la data des palmares\n\n  const fetchDataPalmares = () => {\n    axios.get(`http://localhost:5000/palmares`).then(res => setpalmares(res.data)).catch(err => console.log(err));\n  }; //post de palmares\n\n\n  const createDataPalmares = e => {\n    e.preventDefault();\n    axios.post('http://localhost:5000/palmares', createPalmares).catch(err => console.log(err));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, idUser.firstname), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, idUser.lastname), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, idUser.email), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, idUser.password), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, idUser.birthday), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, idUser.birthday_place), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, idUser.actual_place), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, idUser.categorie), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, idUser.size), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, idUser.weight), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, idUser.hobbies), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, idUser.profil_pic), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, idUser.role), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"autres champs du user \\xE0 modifier ou \\xE0 rentrer\"), React.createElement(\"form\", {\n    onSubmit: updateDataUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"firstname\"), React.createElement(\"input\", {\n    id: \"firstname\",\n    name: \"firstname\",\n    value: updateUser.firstname,\n    required: true,\n    type: \"text\",\n    onChange: e => {\n      setUpdateUser(_objectSpread({}, updateUser, {\n        firstname: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"lastname\"), React.createElement(\"input\", {\n    id: \"lastname\",\n    name: \"lastname\",\n    value: updateUser.lastname,\n    required: true,\n    type: \"text\",\n    onChange: e => {\n      setUpdateUser(_objectSpread({}, updateUser, {\n        lastname: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"email\"), React.createElement(\"input\", {\n    id: \"email\",\n    name: \"email\",\n    value: updateUser.email,\n    required: true,\n    type: \"text\",\n    onChange: e => {\n      setUpdateUser(_objectSpread({}, updateUser, {\n        email: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"password\"), React.createElement(\"input\", {\n    id: \"password\",\n    name: \"password\",\n    value: updateUser.password,\n    required: true,\n    type: \"text\",\n    onChange: e => {\n      setUpdateUser(_objectSpread({}, updateUser, {\n        password: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"birthday\"), React.createElement(\"input\", {\n    id: \"birthday\",\n    name: \"birthday\",\n    value: updateUser.birthday,\n    required: true,\n    type: \"date\",\n    onChange: e => {\n      setUpdateUser(_objectSpread({}, updateUser, {\n        birthday: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"birthday place\"), React.createElement(\"input\", {\n    id: \"birthday_place\",\n    name: \"birthday_place\",\n    value: updateUser.birthday_place,\n    required: true,\n    type: \"text\",\n    onChange: e => {\n      setUpdateUser(_objectSpread({}, updateUser, {\n        birthday_place: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"actual_club\"), React.createElement(\"input\", {\n    id: \"actual_club\",\n    name: \"actual_club\",\n    value: updateUser.actual_club,\n    required: true,\n    type: \"text\",\n    onChange: e => {\n      setUpdateUser(_objectSpread({}, updateUser, {\n        actual_club: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"categorie\"), React.createElement(\"input\", {\n    id: \"categorie\",\n    name: \"categorie\",\n    value: updateUser.categorie,\n    required: true,\n    type: \"text\",\n    onChange: e => {\n      setUpdateUser(_objectSpread({}, updateUser, {\n        categorie: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"size\"), React.createElement(\"input\", {\n    id: \"size\",\n    name: \"size\",\n    value: updateUser.size,\n    required: true,\n    type: \"text\",\n    onChange: e => {\n      setUpdateUser(_objectSpread({}, updateUser, {\n        size: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"weight\"), React.createElement(\"input\", {\n    id: \"weight\",\n    name: \"weight\",\n    value: updateUser.weight,\n    required: true,\n    type: \"text\",\n    onChange: e => {\n      setUpdateUser(_objectSpread({}, updateUser, {\n        weight: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"hobbies\"), React.createElement(\"input\", {\n    id: \"hobbies\",\n    name: \"hobbies\",\n    value: updateUser.hobbies,\n    required: true,\n    type: \"text\",\n    onChange: e => {\n      setUpdateUser(_objectSpread({}, updateUser, {\n        hobbies: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"profil_pic\"), React.createElement(\"input\", {\n    id: \"profil_pic\",\n    name: \"profil_pic\",\n    value: updateUser.profil_pic,\n    required: true,\n    type: \"text\",\n    onChange: e => {\n      setUpdateUser(_objectSpread({}, updateUser, {\n        profil_pic: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"role\"), React.createElement(\"input\", {\n    id: \"role\",\n    name: \"role\",\n    value: updateUser.role,\n    required: true,\n    type: \"text\",\n    onChange: e => {\n      setUpdateUser(_objectSpread({}, updateUser, {\n        role: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \"submit\")), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, \"Parcours sportif\"), palmares.filter(x => x.UserId === idUser.id).map(x => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, x.name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, x.description), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, x.UserId))), React.createElement(\"form\", {\n    onSubmit: createDataPalmares,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, \"name\"), React.createElement(\"input\", {\n    id: \"name\",\n    name: \"name\",\n    value: createPalmares.name,\n    required: true,\n    type: \"text\",\n    onChange: e => {\n      setcreatePalmares(_objectSpread({}, createPalmares, {\n        name: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \"description\"), React.createElement(\"input\", {\n    id: \"description\",\n    name: \"description\",\n    value: createPalmares.description,\n    required: true,\n    type: \"text\",\n    onChange: e => {\n      setcreatePalmares(_objectSpread({}, createPalmares, {\n        description: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: e => {\n      setcreatePalmares(_objectSpread({}, createPalmares, {\n        UserId: idUser.id\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, \"submit\")));\n};\n\nexport default ProfilePage;","map":{"version":3,"sources":["/home/anthony/Devweb/WILD/hackathon synaps/Synapsis/front/src/components/4_profilePage/ProfilePage.js"],"names":["React","useState","useEffect","useContext","NavBar","axios","Link","ProfilePage","idUser","setIdUser","firstname","lastname","email","password","birthday","birthday_place","actual_club","categorie","size","weight","hobbies","profil_pic","role","updateUser","setUpdateUser","history","sethistory","name","poste","date","description","createHistory","setcreateHistory","palmares","setpalmares","UserId","createPalmares","setcreatePalmares","fetchDataUser","get","then","res","data","catch","err","console","log","updateDataUser","e","preventDefault","put","fetchDataHistory","createDataHistory","post","fetchDataPalmares","createDataPalmares","actual_place","target","value","filter","x","id","map"],"mappings":"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","sourcesContent":["import React, {\n    useState,\n    useEffect,\n    useContext\n} from 'react';\nimport NavBar from '../6_navBar/NavBar'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom';\nimport './ProfilePage.css'\n\n\n\nconst ProfilePage = () => {\n//hooks pour get et update un user\n const [idUser,setIdUser]=useState([])\n const [updateUser,setUpdateUser]=useState({\n    firstname:'',\n    lastname:'',\n    email:'',\n    password:'',\n    birthday:'',\n    birthday_place:'',\n    actual_club:'',\n    categorie:'',\n    size:'',\n    weight:'',\n    hobbies:'',\n    profil_pic:'',\n    role:''\n })\n\n//hooks pour get create et delete\nconst [history, sethistory] = useState([])\nconst [createHistory, setcreateHistory] = useState({\n    name:'',\n    poste:'',\n    date:'',\n    description:''\n})\n\n\n //hooks pour get et update un palmares\nconst [palmares, setpalmares] = useState([])\n const [createPalmares, setcreatePalmares] = useState({\n    name:'',\n    description:'',\n    UserId:0\n })\n\n    useEffect(() => {\n        fetchDataUser()\n    }, [])\n//fetch de la data du user \n    const fetchDataUser = ()=>{\n        axios.get(`http://localhost:5000/users/2`)\n        .then(res => setIdUser(res.data))\n        .catch((err) => console.log(err))\n    }\n// update de la data du user\n    const updateDataUser = (e) => {\n        e.preventDefault()\n        axios.put(`http://localhost:5000/users/2`, updateUser)\n            .then(res => setUpdateUser(res.data))\n            .catch((err) => console.log(err))\n    }\n\n\n\n\n\n\n    useEffect(() => {\n        fetchDataHistory()\n    }, [])\n//fetch de la data des history\n     const fetchDataHistory = ()=>{\n        axios.get(`http://localhost:5000/history`)\n        .then(res => sethistory(res.data))\n        .catch((err) => console.log(err))\n    }\n\n    //post de history\n    const createDataHistory = (e) => {\n        e.preventDefault()\n        axios.post('http://localhost:5000/palmares', createPalmares)\n            .catch((err) => console.log(err))\n    }\n\n\n\n\n    useEffect(() => {\n        fetchDataPalmares()\n    }, [])\n//fetch de la data des palmares\n     const fetchDataPalmares = ()=>{\n        axios.get(`http://localhost:5000/palmares`)\n        .then(res => setpalmares(res.data))\n        .catch((err) => console.log(err))\n    }\n//post de palmares\n     const createDataPalmares = (e) => {\n        e.preventDefault()\n        axios.post('http://localhost:5000/palmares', createPalmares)\n            .catch((err) => console.log(err))}\n\n\n\n\n    return(\n        <div>\n            <NavBar/>\n    <p>{idUser.firstname}</p>\n    <p>{idUser.lastname}</p>\n    <p>{idUser.email}</p>\n    <p>{idUser.password}</p>\n    <p>{idUser.birthday}</p>\n    <p>{idUser.birthday_place}</p>\n    <p>{idUser.actual_place}</p>\n    <p>{idUser.categorie}</p>\n    <p>{idUser.size}</p>\n    <p>{idUser.weight}</p>\n    <p>{idUser.hobbies}</p>\n    <p>{idUser.profil_pic}</p>\n    <p>{idUser.role}</p>\n\n\n    <h1>autres champs du user à modifier ou à rentrer</h1>\n\n    <form onSubmit={updateDataUser}>\n        <p>firstname</p>\n         <input id=\"firstname\" name=\"firstname\" value={updateUser.firstname} required type=\"text\"\n        onChange={(e) => { setUpdateUser({ ...updateUser, firstname: e.target.value }) }} />\n\n        <p>lastname</p>\n         <input id=\"lastname\" name=\"lastname\" value={updateUser.lastname} required type=\"text\"\n        onChange={(e) => { setUpdateUser({ ...updateUser, lastname: e.target.value }) }} />\n\n        <p>email</p>\n         <input id=\"email\" name=\"email\" value={updateUser.email} required type=\"text\"\n        onChange={(e) => { setUpdateUser({ ...updateUser, email: e.target.value }) }} />\n\n        <p>password</p>\n         <input id=\"password\" name=\"password\" value={updateUser.password} required type=\"text\"\n        onChange={(e) => { setUpdateUser({ ...updateUser, password: e.target.value }) }} />\n\n        <p>birthday</p>\n         <input id=\"birthday\" name=\"birthday\" value={updateUser.birthday} required type=\"date\"\n        onChange={(e) => { setUpdateUser({ ...updateUser, birthday: e.target.value }) }} />\n        \n        <p>birthday place</p>\n         <input id=\"birthday_place\" name=\"birthday_place\" value={updateUser.birthday_place} required type=\"text\"\n        onChange={(e) => { setUpdateUser({ ...updateUser, birthday_place: e.target.value }) }} />\n\n        <p>actual_club</p>\n         <input id=\"actual_club\" name=\"actual_club\" value={updateUser.actual_club} required type=\"text\"\n        onChange={(e) => { setUpdateUser({ ...updateUser, actual_club: e.target.value }) }} />\n\n        <p>categorie</p>\n         <input id=\"categorie\" name=\"categorie\" value={updateUser.categorie} required type=\"text\"\n        onChange={(e) => { setUpdateUser({ ...updateUser, categorie: e.target.value }) }} />\n        \n        <p>size</p>\n         <input id=\"size\" name=\"size\" value={updateUser.size} required type=\"text\"\n        onChange={(e) => { setUpdateUser({ ...updateUser, size: e.target.value }) }} />\n\n        <p>weight</p>\n         <input id=\"weight\" name=\"weight\" value={updateUser.weight} required type=\"text\"\n        onChange={(e) => { setUpdateUser({ ...updateUser, weight: e.target.value }) }} />\n\n        <p>hobbies</p>\n         <input id=\"hobbies\" name=\"hobbies\" value={updateUser.hobbies} required type=\"text\"\n        onChange={(e) => { setUpdateUser({ ...updateUser, hobbies: e.target.value }) }} />\n\n        <p>profil_pic</p>\n         <input id=\"profil_pic\" name=\"profil_pic\" value={updateUser.profil_pic} required type=\"text\"\n        onChange={(e) => { setUpdateUser({ ...updateUser, profil_pic: e.target.value }) }} />\n\n        <p>role</p>\n         <input id=\"role\" name=\"role\" value={updateUser.role} required type=\"text\"\n        onChange={(e) => { setUpdateUser({ ...updateUser, role: e.target.value }) }} />\n        <button type=\"submit\">submit</button>\n    </form>\n\n    <h1>Parcours sportif</h1>\n    {palmares.filter(x=>x.UserId===idUser.id).map(x=>\n        <div>\n            <p>{x.name}</p>\n            <p>{x.description}</p>\n            <p>{x.UserId}</p>\n\n        </div>\n        \n        )}\n    \n\n\n     <form onSubmit={createDataPalmares}>\n        <p>name</p>\n         <input id=\"name\" name=\"name\" value={createPalmares.name} required type=\"text\"\n        onChange={(e) => { setcreatePalmares({ ...createPalmares, name: e.target.value }) }} />\n\n        <p>description</p>\n         <input id=\"description\" name=\"description\" value={createPalmares.description} required type=\"text\"\n        onChange={(e) => { setcreatePalmares({ ...createPalmares, description: e.target.value }) }} />\n\n        \n        <button type=\"submit\" onClick={(e) => { setcreatePalmares({ ...createPalmares, UserId: idUser.id }) }}>submit</button>\n    </form>\n    \n\n        {/* <div className=\"profile-page\">\n\n            <NavBar />\n\n            <div className=\"profile-div-80\">\n\n                <div className=\"profile-first-container\">\n                    <div className=\"baneer-profile\">\n                        <img className=\"baneer-img\" src=\"https://previews.123rf.com/images/stockdeca/stockdeca1708/stockdeca170800021/85308521-ballon-de-football-sur-l-herbe-verte-banni%C3%A8re-illustration-de-rendu-3d.jpg\"/>\n                    </div>\n                    <div className=\"div-info-head-profile\">\n                        <p>Rida LAMRINI</p>\n                        <p>Joueur</p>\n                        <p>Montpellier Herault Sport Club</p>\n                    </div>\n                    <div className=\"div-numberRelation-profile\">\n                        <p>500 Relations</p>\n                    </div>\n\n\n                </div>\n\n            </div>\n        </div> */}\n        </div>\n    )\n}\n\nexport default ProfilePage;"]},"metadata":{},"sourceType":"module"}