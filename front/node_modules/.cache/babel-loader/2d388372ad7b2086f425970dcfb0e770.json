{"ast":null,"code":"import _objectSpread from \"/home/anthony/Devweb/WILD/hackathon synaps/Synapsis/front/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/anthony/Devweb/WILD/hackathon synaps/Synapsis/front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/anthony/Devweb/WILD/hackathon synaps/Synapsis/front/src/components/test/Routes.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport NavBar from '../6_navBar/NavBar';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nconst Routes = () => {\n  //hooks pour get et update un user\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        idUser = _useState2[0],\n        setIdUser = _useState2[1];\n\n  const _useState3 = useState({\n    firstname: '',\n    lastname: '',\n    email: '',\n    password: '',\n    birthday: '',\n    birthday_place: '',\n    actual_club: '',\n    categorie: '',\n    size: '',\n    weight: '',\n    hobbies: '',\n    profil_pic: '',\n    role: ''\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        updateUser = _useState4[0],\n        setUpdateUser = _useState4[1]; //hooks pour get create et delete history\n\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        history = _useState6[0],\n        sethistory = _useState6[1];\n\n  const _useState7 = useState({\n    name: '',\n    poste: '',\n    date: '',\n    description: ''\n  }),\n        _useState8 = _slicedToArray(_useState7, 2),\n        createHistory = _useState8[0],\n        setcreateHistory = _useState8[1]; //hooks pour get et update un palmares\n\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        palmares = _useState10[0],\n        setpalmares = _useState10[1];\n\n  const _useState11 = useState({\n    name: '',\n    description: '',\n    UserId: 0\n  }),\n        _useState12 = _slicedToArray(_useState11, 2),\n        createPalmares = _useState12[0],\n        setcreatePalmares = _useState12[1]; //hooks pour get et update une distinction\n\n\n  const _useState13 = useState([]),\n        _useState14 = _slicedToArray(_useState13, 2),\n        distinction = _useState14[0],\n        setDistinction = _useState14[1];\n\n  const _useState15 = useState({\n    name: '',\n    date: '',\n    UserId: 0\n  }),\n        _useState16 = _slicedToArray(_useState15, 2),\n        createDistinction = _useState16[0],\n        setcreateDistinction = _useState16[1];\n\n  useEffect(() => {\n    fetchDataUser();\n  }, [_objectSpread({}, idUser)]); //fetch de la data du user \n\n  const fetchDataUser = () => {\n    axios.get(`http://localhost:5000/users/1`).then(res => setIdUser(res.data)).catch(err => console.log(err));\n  }; // update de la data du user\n\n\n  const updateDataUser = e => {\n    e.preventDefault();\n    console.log(updateUser);\n    axios.put(`http://localhost:5000/users/1`, updateUser).then(res => setUpdateUser(res.data)).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    fetchDataHistory();\n  }, []); //fetch de la data des history\n\n  const fetchDataHistory = () => {\n    axios.get(`http://localhost:5000/history`).then(res => sethistory(res.data)).catch(err => console.log(err));\n  }; //post de history\n\n\n  const createDataHistory = e => {\n    e.preventDefault();\n    axios.post('http://localhost:5000/history', createHistory).catch(err => console.log(err));\n  }; //delete de history\n\n\n  const fetchDeleteHistory = id => {\n    axios.delete(`http://localhost:5000/history/${id}`).catch(err => console.log(err));\n    window.location.reload(false);\n  };\n\n  useEffect(() => {\n    fetchDataPalmares();\n  }, []); //fetch de la data des palmares\n\n  const fetchDataPalmares = () => {\n    axios.get(`http://localhost:5000/palmares`).then(res => setpalmares(res.data)).catch(err => console.log(err));\n  }; //post de palmares\n\n\n  const createDataPalmares = e => {\n    e.preventDefault();\n    axios.post('http://localhost:5000/palmares', createPalmares).catch(err => console.log(err));\n  }; //delete de palmares\n\n\n  const fetchDeletePalmares = id => {\n    axios.delete(`http://localhost:5000/palmares/${id}`).catch(err => console.log(err));\n    window.location.reload(false);\n  };\n\n  useEffect(() => {\n    fetchDataDistinction();\n  }, []); //fetch de la data des distinctions\n\n  const fetchDataDistinction = () => {\n    axios.get(`http://localhost:5000/distinctions`).then(res => setDistinction(res.data)).catch(err => console.log(err));\n  }; //post de distinction\n\n\n  const createDataDistinction = e => {\n    e.preventDefault();\n    axios.post('http://localhost:5000/distinction', createDistinction).catch(err => console.log(err));\n  }; //delete de distinction\n\n\n  const fetchDeleteDistinction = id => {\n    axios.delete(`http://localhost:5000/distinction/${id}`).catch(err => console.log(err));\n    window.location.reload(false);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, idUser.firstname), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, idUser.lastname), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, idUser.email), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, idUser.password), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, idUser.birthday), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, idUser.birthday_place), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, idUser.actual_place), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, idUser.categorie), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, idUser.size), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, idUser.weight), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, idUser.profil_pic), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, idUser.role), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, idUser.hobbies), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"autres champs du user \\xE0 modifier ou \\xE0 rentrer\"), React.createElement(\"form\", {\n    onSubmit: updateDataUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"firstname\"), React.createElement(\"input\", {\n    id: \"firstname\",\n    name: \"firstname\",\n    value: updateUser.firstname,\n    type: \"text\",\n    onChange: e => {\n      setUpdateUser(_objectSpread({}, updateUser.firstname, {\n        firstname: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"lastname\"), React.createElement(\"input\", {\n    id: \"lastname\",\n    name: \"lastname\",\n    value: updateUser.lastname,\n    type: \"text\",\n    onChange: e => {\n      setUpdateUser(_objectSpread({}, updateUser.lastname, {\n        lastname: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"email\"), React.createElement(\"input\", {\n    id: \"email\",\n    name: \"email\",\n    value: updateUser.email,\n    type: \"text\",\n    onChange: e => {\n      setUpdateUser(_objectSpread({}, updateUser.email, {\n        email: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"password\"), React.createElement(\"input\", {\n    id: \"password\",\n    name: \"password\",\n    value: updateUser.password,\n    type: \"text\",\n    onChange: e => {\n      setUpdateUser(_objectSpread({}, updateUser.password, {\n        password: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"birthday\"), React.createElement(\"input\", {\n    id: \"birthday\",\n    name: \"birthday\",\n    value: updateUser.birthday,\n    type: \"date\",\n    onChange: e => {\n      setUpdateUser(_objectSpread({}, updateUser.birthday, {\n        birthday: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"birthday place\"), React.createElement(\"input\", {\n    id: \"birthday_place\",\n    name: \"birthday_place\",\n    value: updateUser.birthday_place,\n    type: \"text\",\n    onChange: e => {\n      setUpdateUser(_objectSpread({}, updateUser.birthday_place, {\n        birthday_place: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, \"actual_club\"), React.createElement(\"input\", {\n    id: \"actual_club\",\n    name: \"actual_club\",\n    value: updateUser.actual_club,\n    type: \"text\",\n    onChange: e => {\n      setUpdateUser(_objectSpread({}, updateUser.actual_club, {\n        actual_club: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"categorie\"), React.createElement(\"input\", {\n    id: \"categorie\",\n    name: \"categorie\",\n    value: updateUser.categorie,\n    type: \"text\",\n    onChange: e => {\n      setUpdateUser(_objectSpread({}, updateUser.categorie, {\n        categorie: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, \"size\"), React.createElement(\"input\", {\n    id: \"size\",\n    name: \"size\",\n    value: updateUser.size,\n    type: \"text\",\n    onChange: e => {\n      setUpdateUser(_objectSpread({}, updateUser.size, {\n        size: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, \"weight\"), React.createElement(\"input\", {\n    id: \"weight\",\n    name: \"weight\",\n    value: updateUser.weight,\n    type: \"text\",\n    onChange: e => {\n      setUpdateUser(_objectSpread({}, updateUser.weight, {\n        weight: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, \"profil_pic\"), React.createElement(\"input\", {\n    id: \"profil_pic\",\n    name: \"profil_pic\",\n    value: updateUser.profil_pic,\n    type: \"text\",\n    onChange: e => {\n      setUpdateUser(_objectSpread({}, updateUser.profil_pic, {\n        profil_pic: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"role\"), React.createElement(\"input\", {\n    id: \"role\",\n    name: \"role\",\n    value: updateUser.role,\n    type: \"text\",\n    onChange: e => {\n      setUpdateUser(_objectSpread({}, updateUser.role, {\n        role: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"Hobbies\"), React.createElement(\"input\", {\n    id: \"hobbies\",\n    name: \"hobbies\",\n    value: updateUser.hobbies,\n    type: \"text\",\n    onChange: e => {\n      setUpdateUser(_objectSpread({}, updateUser.hobbies, {\n        hobbies: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, \"submit\")), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \"Parcours sportif\"), history.filter(history => history.UserId === idUser.id).map(history => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => fetchDeleteHistory(history.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, \"delete\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, history.name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, history.description), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, history.UserId))), React.createElement(\"form\", {\n    onSubmit: createDataHistory,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, \"name\"), React.createElement(\"input\", {\n    id: \"name\",\n    name: \"name\",\n    value: createHistory.name,\n    required: true,\n    type: \"text\",\n    onChange: e => {\n      setcreateHistory(_objectSpread({}, createHistory, {\n        name: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, \"description\"), React.createElement(\"input\", {\n    id: \"description\",\n    name: \"description\",\n    value: createHistory.description,\n    required: true,\n    type: \"text\",\n    onChange: e => {\n      setcreateHistory(_objectSpread({}, createHistory, {\n        description: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: e => {\n      setcreateHistory(_objectSpread({}, createHistory, {\n        UserId: idUser.id\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, \"submit\")), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, \"Palmares\"), palmares.filter(x => x.UserId === idUser.id).map(x => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, x.name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, x.description), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, x.UserId), React.createElement(\"button\", {\n    onClick: () => fetchDeletePalmares(x.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, \"delete\"))), React.createElement(\"form\", {\n    onSubmit: createDataPalmares,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, \"name\"), React.createElement(\"input\", {\n    id: \"name\",\n    name: \"name\",\n    value: createPalmares.name,\n    required: true,\n    type: \"text\",\n    onChange: e => {\n      setcreatePalmares(_objectSpread({}, createPalmares, {\n        name: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, \"description\"), React.createElement(\"input\", {\n    id: \"description\",\n    name: \"description\",\n    value: createPalmares.description,\n    required: true,\n    type: \"text\",\n    onChange: e => {\n      setcreatePalmares(_objectSpread({}, createPalmares, {\n        description: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: e => {\n      setcreatePalmares(_objectSpread({}, createPalmares, {\n        UserId: idUser.id\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, \"submit\")), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, \"Distinction personnelle\"), distinction.filter(distinction => distinction.UserId === idUser.id).map(distinction => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, distinction.name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, distinction.description), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, distinction.UserId), React.createElement(\"button\", {\n    onClick: () => fetchDeleteDistinction(distinction.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }, \"delete\"))), React.createElement(\"form\", {\n    onSubmit: createDataDistinction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }, \"name\"), React.createElement(\"input\", {\n    id: \"name\",\n    name: \"name\",\n    value: createDistinction.name,\n    required: true,\n    type: \"text\",\n    onChange: e => {\n      setcreateDistinction(_objectSpread({}, createDistinction, {\n        name: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, \"description\"), React.createElement(\"input\", {\n    id: \"description\",\n    name: \"description\",\n    value: createDistinction.description,\n    required: true,\n    type: \"text\",\n    onChange: e => {\n      setcreateDistinction(_objectSpread({}, createDistinction, {\n        description: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: e => {\n      setcreateDistinction(_objectSpread({}, createDistinction, {\n        UserId: idUser.id\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, \"submit\")), React.createElement(\"form\", {\n    onSubmit: createDataClient,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }, \"name\"), React.createElement(\"input\", {\n    id: \"name\",\n    name: \"name\",\n    value: createDistinction.name,\n    required: true,\n    type: \"text\",\n    onChange: e => {\n      setcreateDistinction(_objectSpread({}, createDistinction, {\n        name: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, \"description\"), React.createElement(\"input\", {\n    id: \"description\",\n    name: \"description\",\n    value: createDistinction.description,\n    required: true,\n    type: \"text\",\n    onChange: e => {\n      setcreateDistinction(_objectSpread({}, createDistinction, {\n        description: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: e => {\n      setcreateDistinction(_objectSpread({}, createDistinction, {\n        UserId: idUser.id\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }, \"submit\")));\n};\n\nexport default Routes;","map":{"version":3,"sources":["/home/anthony/Devweb/WILD/hackathon synaps/Synapsis/front/src/components/test/Routes.js"],"names":["React","useState","useEffect","useContext","NavBar","axios","Link","Routes","idUser","setIdUser","firstname","lastname","email","password","birthday","birthday_place","actual_club","categorie","size","weight","hobbies","profil_pic","role","updateUser","setUpdateUser","history","sethistory","name","poste","date","description","createHistory","setcreateHistory","palmares","setpalmares","UserId","createPalmares","setcreatePalmares","distinction","setDistinction","createDistinction","setcreateDistinction","fetchDataUser","get","then","res","data","catch","err","console","log","updateDataUser","e","preventDefault","put","fetchDataHistory","createDataHistory","post","fetchDeleteHistory","id","delete","window","location","reload","fetchDataPalmares","createDataPalmares","fetchDeletePalmares","fetchDataDistinction","createDataDistinction","fetchDeleteDistinction","actual_place","target","value","filter","map","x","createDataClient"],"mappings":"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","sourcesContent":["import React, {\n    useState,\n    useEffect,\n    useContext\n} from 'react';\nimport NavBar from '../6_navBar/NavBar'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom';\n\nconst Routes = () => {\n    //hooks pour get et update un user\n    const [idUser, setIdUser] = useState([])\n    const [updateUser, setUpdateUser] = useState({\n        firstname: '',\n        lastname: '',\n        email: '',\n        password: '',\n        birthday: '',\n        birthday_place: '',\n        actual_club: '',\n        categorie: '',\n        size: '',\n        weight: '',\n        hobbies: '',\n        profil_pic: '',\n        role: ''\n    })\n    //hooks pour get create et delete history\n    const [history, sethistory] = useState([])\n    const [createHistory, setcreateHistory] = useState({\n        name: '',\n        poste: '',\n        date: '',\n        description: ''\n    })\n    //hooks pour get et update un palmares\n    const [palmares, setpalmares] = useState([])\n    const [createPalmares, setcreatePalmares] = useState({\n        name: '',\n        description: '',\n        UserId: 0\n    }) \n    //hooks pour get et update une distinction\n    const [distinction, setDistinction] = useState([])\n    const [createDistinction, setcreateDistinction] = useState({\n        name: '',\n        date: '',\n        UserId: 0\n    })\n    useEffect(() => {\n        fetchDataUser()\n    }, [{ ...idUser }])\n    //fetch de la data du user \n    const fetchDataUser = () => {\n        axios.get(`http://localhost:5000/users/1`)\n            .then(res => setIdUser(res.data))\n            .catch((err) => console.log(err))\n    }\n    // update de la data du user\n    const updateDataUser = (e) => {\n        e.preventDefault()\n        console.log(updateUser)\n        axios.put(`http://localhost:5000/users/1`, updateUser)\n            .then(res => setUpdateUser(res.data))\n            .catch((err) => console.log(err))\n    }\n    useEffect(() => {\n        fetchDataHistory()\n    }, [])\n    //fetch de la data des history\n    const fetchDataHistory = () => {\n        axios.get(`http://localhost:5000/history`)\n            .then(res => sethistory(res.data))\n            .catch((err) => console.log(err))\n    }\n    //post de history\n    const createDataHistory = (e) => {\n        e.preventDefault()\n        axios.post('http://localhost:5000/history', createHistory)\n            .catch((err) => console.log(err))\n    }\n    //delete de history\n     const fetchDeleteHistory = (id) => {\n        axios.delete(`http://localhost:5000/history/${id}`)\n        .catch((err) => console.log(err))\n        window.location.reload(false);\n\n     }\n\n\n    useEffect(() => {\n        fetchDataPalmares()\n    }, [])\n    //fetch de la data des palmares\n    const fetchDataPalmares = () => {\n        axios.get(`http://localhost:5000/palmares`)\n            .then(res => setpalmares(res.data))\n            .catch((err) => console.log(err))\n    }\n    //post de palmares\n    const createDataPalmares = (e) => {\n        e.preventDefault()\n        axios.post('http://localhost:5000/palmares', createPalmares)\n            .catch((err) => console.log(err))\n    }\n    //delete de palmares\n    const fetchDeletePalmares = (id) => {\n        axios.delete(`http://localhost:5000/palmares/${id}`)\n            .catch((err) => console.log(err))\n            window.location.reload(false);\n\n    }\n\n\n\n\n    useEffect(() => {\n        fetchDataDistinction()\n    }, [])\n    //fetch de la data des distinctions\n    const fetchDataDistinction = () => {\n        axios.get(`http://localhost:5000/distinctions`)\n            .then(res => setDistinction(res.data))\n            .catch((err) => console.log(err))\n    }\n    //post de distinction\n    const createDataDistinction = (e) => {\n        e.preventDefault()\n        axios.post('http://localhost:5000/distinction', createDistinction)\n            .catch((err) => console.log(err))\n    }\n\n    //delete de distinction\n     const fetchDeleteDistinction = (id) => {\n        axios.delete(`http://localhost:5000/distinction/${id}`)\n        .catch((err) => console.log(err))\n        window.location.reload(false);\n\n     }\n    return (\n        <div>\n            <NavBar />\n            <p>{idUser.firstname}</p>\n            <p>{idUser.lastname}</p>\n            <p>{idUser.email}</p>\n            <p>{idUser.password}</p>\n            <p>{idUser.birthday}</p>\n            <p>{idUser.birthday_place}</p>\n            <p>{idUser.actual_place}</p>\n            <p>{idUser.categorie}</p>\n            <p>{idUser.size}</p>\n            <p>{idUser.weight}</p>\n            <p>{idUser.profil_pic}</p>\n            <p>{idUser.role}</p>\n            <p>{idUser.hobbies}</p>\n            <h1>autres champs du user à modifier ou à rentrer</h1>\n            <form onSubmit={updateDataUser}>\n\n                <p>firstname</p>\n                <input id=\"firstname\" name=\"firstname\" value={updateUser.firstname} type=\"text\"\n                    onChange={(e) => { setUpdateUser({ ...updateUser.firstname, firstname: e.target.value }) }} />\n                <p>lastname</p>\n                <input id=\"lastname\" name=\"lastname\" value={updateUser.lastname} type=\"text\"\n                    onChange={(e) => { setUpdateUser({ ...updateUser.lastname, lastname: e.target.value }) }} />\n                <p>email</p>\n                <input id=\"email\" name=\"email\" value={updateUser.email} type=\"text\"\n                    onChange={(e) => { setUpdateUser({ ...updateUser.email, email: e.target.value }) }} />\n                <p>password</p>\n                <input id=\"password\" name=\"password\" value={updateUser.password} type=\"text\"\n                    onChange={(e) => { setUpdateUser({ ...updateUser.password, password: e.target.value }) }} />\n                <p>birthday</p>\n                <input id=\"birthday\" name=\"birthday\" value={updateUser.birthday} type=\"date\"\n                    onChange={(e) => { setUpdateUser({ ...updateUser.birthday, birthday: e.target.value }) }} />\n\n                <p>birthday place</p>\n                <input id=\"birthday_place\" name=\"birthday_place\" value={updateUser.birthday_place} type=\"text\"\n                    onChange={(e) => { setUpdateUser({ ...updateUser.birthday_place, birthday_place: e.target.value }) }} />\n                <p>actual_club</p>\n                <input id=\"actual_club\" name=\"actual_club\" value={updateUser.actual_club} type=\"text\"\n                    onChange={(e) => { setUpdateUser({ ...updateUser.actual_club, actual_club: e.target.value }) }} />\n                <p>categorie</p>\n                <input id=\"categorie\" name=\"categorie\" value={updateUser.categorie} type=\"text\"\n                    onChange={(e) => { setUpdateUser({ ...updateUser.categorie, categorie: e.target.value }) }} />\n\n                <p>size</p>\n                <input id=\"size\" name=\"size\" value={updateUser.size} type=\"text\"\n                    onChange={(e) => { setUpdateUser({ ...updateUser.size, size: e.target.value }) }} />\n                <p>weight</p>\n                <input id=\"weight\" name=\"weight\" value={updateUser.weight} type=\"text\"\n                    onChange={(e) => { setUpdateUser({ ...updateUser.weight, weight: e.target.value }) }} />\n                <p>profil_pic</p>\n                <input id=\"profil_pic\" name=\"profil_pic\" value={updateUser.profil_pic} type=\"text\"\n                    onChange={(e) => { setUpdateUser({ ...updateUser.profil_pic, profil_pic: e.target.value }) }} />\n                <p>role</p>\n                <input id=\"role\" name=\"role\" value={updateUser.role} type=\"text\"\n                    onChange={(e) => { setUpdateUser({ ...updateUser.role, role: e.target.value }) }} />\n                <h1>Hobbies</h1>\n                <input id=\"hobbies\" name=\"hobbies\" value={updateUser.hobbies} type=\"text\"\n                    onChange={(e) => { setUpdateUser({ ...updateUser.hobbies, hobbies: e.target.value }) }} />\n                <button type='submit'>submit</button>\n            </form>\n            {/* history place */}\n            <h1>Parcours sportif</h1>\n            {history.filter(history => history.UserId === idUser.id).map(history =>\n                <div>\n                    <button onClick={()=>fetchDeleteHistory(history.id)} >delete</button>\n                    <p>{history.name}</p>\n                    <p>{history.description}</p>\n                    <p>{history.UserId}</p>\n                </div>\n\n            )}\n\n            <form onSubmit={createDataHistory}>\n                <p>name</p>\n                <input id=\"name\" name=\"name\" value={createHistory.name} required type=\"text\"\n                    onChange={(e) => { setcreateHistory({ ...createHistory, name: e.target.value }) }} />\n                <p>description</p>\n                <input id=\"description\" name=\"description\" value={createHistory.description} required type=\"text\"\n                    onChange={(e) => { setcreateHistory({ ...createHistory, description: e.target.value }) }} />\n\n                <button type=\"submit\" onClick={(e) => { setcreateHistory({ ...createHistory, UserId: idUser.id }) }}>submit</button>\n            </form>\n            <h1>Palmares</h1>\n            {palmares.filter(x => x.UserId === idUser.id).map(x =>\n                <div>\n                    <p>{x.name}</p>\n                    <p>{x.description}</p>\n                    <p>{x.UserId}</p>\n                    <button onClick={()=>fetchDeletePalmares(x.id)} >delete</button>\n                </div>\n\n            )}\n\n            <form onSubmit={createDataPalmares}>\n                <p>name</p>\n                <input id=\"name\" name=\"name\" value={createPalmares.name} required type=\"text\"\n                    onChange={(e) => { setcreatePalmares({ ...createPalmares, name: e.target.value }) }} />\n                <p>description</p>\n                <input id=\"description\" name=\"description\" value={createPalmares.description} required type=\"text\"\n                    onChange={(e) => { setcreatePalmares({ ...createPalmares, description: e.target.value }) }} />\n\n                <button type=\"submit\" onClick={(e) => { setcreatePalmares({ ...createPalmares, UserId: idUser.id }) }}>submit</button>\n            </form>\n\n            <h1>Distinction personnelle</h1>\n            {distinction.filter(distinction => distinction.UserId === idUser.id).map(distinction =>\n                <div>\n                    <p>{distinction.name}</p>\n                    <p>{distinction.description}</p>\n                    <p>{distinction.UserId}</p>\n                    <button onClick={()=>fetchDeleteDistinction(distinction.id)} >delete</button>\n\n                </div>\n\n            )}\n\n            <form onSubmit={createDataDistinction}>\n                <p>name</p>\n                <input id=\"name\" name=\"name\" value={createDistinction.name} required type=\"text\"\n                    onChange={(e) => { setcreateDistinction({ ...createDistinction, name: e.target.value }) }} />\n                <p>description</p>\n                <input id=\"description\" name=\"description\" value={createDistinction.description} required type=\"text\"\n                    onChange={(e) => { setcreateDistinction({ ...createDistinction, description: e.target.value }) }} />\n\n                <button type=\"submit\" onClick={(e) => { setcreateDistinction({ ...createDistinction, UserId: idUser.id }) }}>submit</button>\n            </form>\n\n{/* form des clients de l'agent */}\n\n            <form onSubmit={createDataClient}>\n                <p>name</p>\n                <input id=\"name\" name=\"name\" value={createDistinction.name} required type=\"text\"\n                    onChange={(e) => { setcreateDistinction({ ...createDistinction, name: e.target.value }) }} />\n                <p>description</p>\n                <input id=\"description\" name=\"description\" value={createDistinction.description} required type=\"text\"\n                    onChange={(e) => { setcreateDistinction({ ...createDistinction, description: e.target.value }) }} />\n\n                <button type=\"submit\" onClick={(e) => { setcreateDistinction({ ...createDistinction, UserId: idUser.id }) }}>submit</button>\n            </form>\n\n\n\n            {/* <div className=\"profile-page\">\n            <NavBar />\n            <div className=\"profile-div-80\">\n                <div className=\"profile-first-container\">\n                    <div className=\"baneer-profile\">\n                        <img className=\"baneer-img\" src=\"https://previews.123rf.com/images/stockdeca/stockdeca1708/stockdeca170800021/85308521-ballon-de-football-sur-l-herbe-verte-banni%C3%A8re-illustration-de-rendu-3d.jpg\"/>\n                    </div>\n                    <div className=\"div-info-head-profile\">\n                        <p>Rida LAMRINI</p>\n                        <p>Joueur</p>\n                        <p>Montpellier Herault Sport Club</p>\n                    </div>\n                    <div className=\"div-numberRelation-profile\">\n                        <p>500 Relations</p>\n                    </div>\n                </div>\n            </div>\n        </div> */}\n        </div>\n    )\n}\nexport default Routes;"]},"metadata":{},"sourceType":"module"}